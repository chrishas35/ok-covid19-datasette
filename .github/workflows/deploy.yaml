name: Extract data and deploy site
on:
  repository_dispatch:
    types: [deploy-site]
  push:
    branches:
      - 'master'
    paths:
      - 'poetry.lock'
      - 'data/pdfs/**'
      - 'extract.py'
      - 'metadata.json'

jobs:
  deploy:
    name: Extract and deploy
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v1
      with:
        python-version: 3.8
    - uses: actions/setup-java@v1
      with:
        java-version: '11' # The JDK version to make available on the path.
        java-package: jre # (jre, jdk, or jdk+fx) - defaults to jdk
    - uses: dschep/install-poetry-action@v1.3
      with:
        create_virtualenvs: true
    - uses: actions/cache@v1
      id: cache
      env:
        cache-name: cache-virtualenv-v1
      with:
        path: ~/.virtualenvs
        key: ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('**/poetry.lock') }}
    - name: Set Poetry config
      run: |
        poetry config virtualenvs.in-project false
        poetry config virtualenvs.path ~/.virtualenvs
        poetry config --list
    - name: Install Dependencies
      run: poetry install
      if: steps.cache.outputs.cache-hit != 'true'
    - name: Extract contents
      run: poetry run python extract.py
    - name: Setup Cloud Run
      uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
      with:
        version: "275.0.0"
        service_account_email: ${{ secrets.GCLOUD_SA_EMAIL }}
        service_account_key: ${{ secrets.GCLOUD_SA_KEY }}
    - name: Deploy to Cloud Run
      env:
        PROJECT_ID: ${{ secrets.GCLOUD_PROJECT_ID }}
      run: |-
        gcloud config set run/region us-central1
        gcloud config set project $PROJECT_ID
        poetry run datasette publish cloudrun ok-covid19.db --service ok-covid19-datasette-prod -m metadata.json
